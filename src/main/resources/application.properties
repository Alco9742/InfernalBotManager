#datasource heroku
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.platform=POSTGRESQL
#spring.datasource.url=${JDBC_DATABASE_URL}
#spring.datasource.username=${JDBC_DATABASE_USERNAME}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD}
spring.datasource.url=jdbc:postgresql://localhost:5439/leagueinformer
#spring.datasource.url=jdbc:postgresql://localhost:5300/leagueinformer
spring.datasource.username=postgres
spring.datasource.password=postgres


#logging
#logging.level.org.springframework.web=INFO
#logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
#logging.level.org.hibernate=ERROR
#logging.file=twittertools.log
#logging.path=logs


#JPA
spring.jpa.show-sql=true
#spring.jpa.generate-ddl=true

# Hibernate
spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

#enable Quartz
quartz.enabled = false

#custom
env=${server.env}
cron.frequency.makereport = 0 5 0 1/1 * ? *

#ddl file generation
spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql

#rest
spring.data.rest.base-path=/api
spring.data.rest.detection-strategy=annotated